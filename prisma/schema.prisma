// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Booking {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @db.ObjectId
  service     Service   @relation(fields: [serviceId], references: [id])
  serviceId   String    @db.ObjectId
  status      String
  scheduleId  String    @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   Boolean   @default(false)
}

model User {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  email       String      @unique
  name        String
  password    String
  expiresAt   DateTime?
  token       String?
  bookings    Booking[]  
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  deletedAt   Boolean     @default(false)
}

model Service {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String      @unique
  description   String
  bookings      Booking[]
  schedules     Schedule[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  deletedAt     Boolean     @default(false)
}

model Schedule {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  service       Service     @relation(fields: [serviceId], references: [id])
  serviceId     String      @db.ObjectId
  startTime     DateTime
  endTime       DateTime
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}
